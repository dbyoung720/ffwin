 loader/CMakeLists.txt | 51 ++++++++++++++++++++++++++++++++++++---------------
 1 file changed, 36 insertions(+), 15 deletions(-)

diff --git a/loader/CMakeLists.txt b/loader/CMakeLists.txt
index 6296ebf..42eb998 100644
--- a/loader/CMakeLists.txt
+++ b/loader/CMakeLists.txt
@@ -379,29 +379,49 @@ if(WIN32)
         set(RC_FILE_LOCATION ${CMAKE_CURRENT_BINARY_DIR}/loader.rc)
     endif()
 
+#    add_library(vulkan
+#                SHARED
+#                ${NORMAL_LOADER_SRCS}
+#                ${CMAKE_CURRENT_SOURCE_DIR}/${API_TYPE}-1.def
+#                ${RC_FILE_LOCATION})
+
+#    target_link_libraries(vulkan PRIVATE loader_specific_options)
+		set(LOADER_UNKNOWN_CHAIN_LIBRARY $<$<TARGET_EXISTS:loader-unknown-chain>:$<TARGET_OBJECTS:loader-unknown-chain>>)
+
+#    if(UNKNOWN_FUNCTIONS_SUPPORTED AND TARGET loader-unknown-chain)
+#        target_link_libraries(vulkan PRIVATE loader-unknown-chain)
+#    endif()
+    if (BUILD_STATIC_LOADER)
+        set(VULKAN_LIBRARY_TYPE STATIC)
+    else()
+        set(VULKAN_LIBRARY_TYPE SHARED)
+    endif()
+
     add_library(vulkan
-                SHARED
+                ${VULKAN_LIBRARY_TYPE}
                 ${NORMAL_LOADER_SRCS}
                 ${CMAKE_CURRENT_SOURCE_DIR}/${API_TYPE}-1.def
-                ${RC_FILE_LOCATION})
-
-    target_link_libraries(vulkan PRIVATE loader_specific_options)
-
-    if(UNKNOWN_FUNCTIONS_SUPPORTED AND TARGET loader-unknown-chain)
-        target_link_libraries(vulkan PRIVATE loader-unknown-chain)
-    endif()
+                ${RC_FILE_LOCATION}
+                ${LOADER_UNKNOWN_CHAIN_LIBRARY})
 
     # when adding the suffix the import and runtime library names must be consistent
     # mingw: libvulkan-1.dll.a / vulkan-1.dll
     # msvc: vulkan-1.lib / vulkan-1.dll
-    set_target_properties(vulkan
-                          PROPERTIES
-                          OUTPUT_NAME ${API_TYPE}-1)
-    if(MINGW)
+#    set_target_properties(vulkan
+#                          PROPERTIES
+#                          OUTPUT_NAME ${API_TYPE}-1)
+#    if(MINGW)
+     if (NOT BUILD_STATIC_LOADER)
         # generate the same DLL with mingw
         set_target_properties(vulkan
                               PROPERTIES
-                              PREFIX "")
+                               OUTPUT_NAME ${API_TYPE}-1)
+        if(MINGW)
+            # generate the same DLL with mingw
+            set_target_properties(vulkan
+                                  PROPERTIES
+                                  PREFIX "")
+        endif()
     endif()
 
     if(MSVC AND ENABLE_WIN10_ONECORE)
@@ -516,7 +536,8 @@ if (LOADER_USE_UNSAFE_FILE_SEARCH)
 endif()
 
 # common attributes of the vulkan library
-target_link_libraries(vulkan PRIVATE loader_specific_options)
+#target_link_libraries(vulkan PRIVATE loader_specific_options)
+target_link_libraries(vulkan PRIVATE $<BUILD_INTERFACE:loader_specific_options>)
 
 target_link_libraries(vulkan PRIVATE Vulkan::Headers)
 add_library(Vulkan::Loader ALIAS vulkan)
@@ -549,7 +570,7 @@ install(FILES "${version_config}" DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/Vulk
 # https://gitlab.kitware.com/cmake/cmake/-/issues/22621
 find_package(PkgConfig)
 if (PKG_CONFIG_FOUND)
-    if(WIN32)
+    if(WIN32 AND NOT BUILD_STATIC_LOADER)
         if(MINGW)
             set(VULKAN_LIB_SUFFIX "-1.dll")
         else()
